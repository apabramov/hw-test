version: "3.9"
services:
   postgres:
      image: postgres:14-alpine
      environment:
        POSTGRES_DB: ${DB_DATABASE}
        POSTGRES_USER: ${DB_USERNAME}
        POSTGRES_PASSWORD: ${DB_PASSWORD}
      healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U admin -d db" ]
        interval: 10s
        timeout: 30s
        retries: 3
      ports:
        - ${DB_PORT}:5432
      volumes:
        - pgdata:/var/lib/postgresql/data
      networks:
        - calendar-network

   rabbit:
     image: rabbitmq:3.11-management
     hostname: rabbit
     ports:
       - 5672:5672
       - 15672:15672
     healthcheck:
       test: rabbitmq-diagnostics -q ping
       interval: 10s
       timeout: 30s
       retries: 3
     networks:
       - calendar-network

   goose:
     build:
      context: ../.
      dockerfile: build/goose/Dockerfile
     command: ["goose", "--dir=/migrations", "postgres", "postgres://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_DATABASE}?sslmode=disable", "up"]
     volumes:
      - ./../migrations:/migrations
     depends_on:
       postgres:
         condition: service_healthy
     networks:
      - calendar-network

   calendar:
     build:
      context: ../
      dockerfile: build/calendar/Dockerfile
     command: ["/opt/calendar/calendar-app", "-config", "/etc/calendar/config.toml"]
     volumes:
       - ./../configs/config.toml:/etc/calendar/config.toml
     ports:
      - 8088:8088
      - 12000:12000
     depends_on:
       postgres:
         condition: service_healthy
       rabbit:
         condition: service_started
     networks:
      - calendar-network

   scheduler:
     build:
      context: ../
      dockerfile: build/scheduler/Dockerfile
     command: ["/opt/scheduler/scheduler-app", "-config", "/etc/scheduler/config_scheduler.toml"]
     volumes:
       - ./../configs/config_scheduler.toml:/etc/calendar/config_scheduler.toml
     depends_on:
       postgres:
         condition: service_healthy
       rabbit:
         condition: service_started
     networks:
      - calendar-network

   sender:
     build:
       context: ../
       dockerfile: build/sender/Dockerfile
     command: ["/opt/sender/sender-app", "-config", "/etc/sender/config_sender.toml"]
     volumes:
       - ./../configs/config_sender.toml:/etc/calendar/config_sender.toml
     depends_on:
       postgres:
         condition: service_healthy
       rabbit:
         condition: service_started
     networks:
      - calendar-network


volumes:
  pgdata:
      driver: local

networks:
  calendar-network:
    driver: bridge